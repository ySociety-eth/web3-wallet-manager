var i=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;function c(t){if(!Number.isSafeInteger(t)||t<0)throw new Error("positive integer expected, got "+t)}function a(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function f(t,...e){if(!a(t))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(t.length))throw new Error("Uint8Array expected of length "+e+", got length="+t.length)}function w(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");c(t.outputLen),c(t.blockLen)}function x(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function b(t,e){f(t);let n=e.outputLen;if(t.length<n)throw new Error("digestInto() expects output buffer of length at least "+n)}function E(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function B(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}function U(t,e){return t<<32-e|t>>>e}var O=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function l(t){return t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255}function T(t){for(let e=0;e<t.length;e++)t[e]=l(t[e])}var y=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function k(t){f(t);let e="";for(let n=0;n<t.length;n++)e+=y[t[n]];return e}function d(t){if(typeof t!="string")throw new Error("utf8ToBytes expected string, got "+typeof t);return new Uint8Array(new TextEncoder().encode(t))}function p(t){return typeof t=="string"&&(t=d(t)),f(t),t}function S(...t){let e=0;for(let r=0;r<t.length;r++){let o=t[r];f(o),e+=o.length}let n=new Uint8Array(e);for(let r=0,o=0;r<t.length;r++){let u=t[r];n.set(u,o),o+=u.length}return n}var s=class{clone(){return this._cloneInto()}};function V(t){let e=r=>t().update(p(r)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}function _(t){let e=(r,o)=>t(o).update(p(r)).digest(),n=t({});return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=r=>t(r),e}function j(t=32){if(i&&typeof i.getRandomValues=="function")return i.getRandomValues(new Uint8Array(t));if(i&&typeof i.randomBytes=="function")return i.randomBytes(t);throw new Error("crypto.getRandomValues must be defined")}export{c as a,f as b,w as c,x as d,b as e,E as f,B as g,U as h,O as i,T as j,k,p as l,S as m,s as n,V as o,_ as p,j as q};
